{"version":3,"file":"static/js/848.c1b50b9d.chunk.js","mappings":"qOAGaA,GAAOC,EAAAA,EAAAA,IAAH,2aAmBJC,GAAYC,EAAAA,EAAAA,IAAO,MAAPA,CAAH,yHAOTC,EAAgBD,EAAAA,GAAAA,IAAH,+DAKbE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,yYAkBRI,EAAYJ,EAAAA,GAAAA,GAAH,mJASTK,EAAWL,EAAAA,GAAAA,EAAH,uMAMNH,GAGFS,GAAeN,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,yW,UCnEzB,GAAeO,EAAAA,EAAAA,IAAf,ySAIcC,EACAA,G,uFCiEd,EAxDiB,WACf,IAAMC,GAAKC,EAAAA,EAAAA,QAAO,MACZC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,eAe/B,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,IAAIC,IAAJ,CAAUP,EAAGQ,QAAS,CAClCC,QAAS,CAAC,2BACVC,WAAY,IACZC,UAAW,GACXC,YAAY,IAGd,OAAO,WACLN,EAAMO,SACP,CACF,GAAE,KAGD,+BACE,UAACvB,EAAD,CACEwB,MAAO,CACLC,gBAAgB,OAAD,OAASC,EAAT,KACfC,eAAgB,QAChBC,OAAQ,SAJZ,WAOE,SAACvB,EAAD,CAAWwB,IAAKnB,KAChB,SAAC,EAAD,KACA,SAACJ,EAAD,CACEwB,GAAIC,EAAAA,EAAAA,GACJC,QAAS,CAAEC,MAAO,EAAGC,QAAS,GAC9BC,QAAS,CAAEF,MAAO,EAAGC,QAAS,GAC9BE,WAAY,CAAEC,SAAU,IAAKC,MAAO,KAJtC,kEASE1B,GAYA,SAACL,EAAD,CAAcgC,GAAIC,EAAAA,EAAAA,SAAlB,2BAXA,SAACT,EAAA,MAAD,CACEC,QAAS,CAAES,GAAI,GAAIP,QAAS,GAC5BC,QAAS,CAAEM,EAAG,EAAGP,QAAS,GAC1BE,WAAY,CAAEC,SAAU,GAAKC,MAAO,KAHtC,UAKE,UAACpC,EAAD,YACE,SAACC,EAAD,CAAUoC,GAAG,QAAb,qBACA,SAACpC,EAAD,CAAUoC,GAAG,WAAb,8BASb,C","sources":["pages/HomePage/HomePage.styled.jsx","fonts/fonts.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const glow = keyframes`\nfrom {\n    text-shadow:\n  2px 2px 1px rgba(255,255,255,.4),\n  0 0 10px #fff,\n  0 0 30px rgba(255, 255, 255, .75),\n  0 0 50px rgba(255, 255, 255, .75),\n  0 0 60px rgba(255, 255, 255, .75);\n  }\n  to {\n    text-shadow:\n  2px 2px 1px rgba(255,255,255,.4),\n  0 10 20px #fff,\n  0 8 40px rgba(255, 255, 255, .75),\n  0 0 60px rgba(255, 255, 255, .75),\n  0 0 80px rgba(255, 255, 255, .75);\n  }\n  `;\n\nexport const Container = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const AuthContainer = styled.div`\n  display: flex;\n  column-gap: 20px;\n`;\n\nexport const AuthLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  padding: 0.5rem 1rem;\n  text-decoration: none;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\n    border-color 0.15s ease-in-out;\n  color: #fff;\n  background-color: #000;\n  border-radius: 25px;\n  width: 80px;\n  &:hover,\n  :focus {\n    color: #000;\n    background-color: #fff;\n  }\n`;\n\nexport const HomeTitle = styled.h1`\n  display: block;\n  padding: 10px 25px;\n  border-radius: 25px;\n  margin: 0;\n  color: #000;\n  background-color: #fff;\n`;\n\nexport const HomeText = styled.p`\n  padding: 10px 25px;\n  font-family: 'LeHavreLayersDblLine';\n  color: red;\n  margin-top: 50px;\n  margin-bottom: 50px;\n  animation: ${glow} 1s ease-in-out infinite alternate;\n`;\n\nexport const ContactsLink = styled(NavLink)`\n  padding: 0.5rem 1rem;\n  text-decoration: none;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\n    border-color 0.15s ease-in-out;\n  color: #fff;\n  background-color: rgb(100, 70, 192);\n  border-radius: 25px;\n  &:hover,\n  :focus {\n    color: #0d6efd;\n    background-color: rgb(221, 216, 236);\n  }\n`;\n","import { createGlobalStyle } from 'styled-components';\nimport LeHavreLayersDblLine from './LeHavreLayers-DblLine/LeHavreLayers-DblLine.woff';\n\nexport default createGlobalStyle`\n    @font-face {\n        font-family: 'LeHavreLayersDblLine';\n        src: local('LeHavreLayersDblLine'), local('LeHavreLayersDblLine'),\n        url(${LeHavreLayersDblLine}) format('woff'),\n        url(${LeHavreLayersDblLine}) format('woff2');\n        font-weight: 700;\n        font-style: normal;\n    }\n\n`;\n","import {\n  Container,\n  HomeTitle,\n  HomeText,\n  AuthLink,\n  AuthContainer,\n  ContactsLink,\n} from './HomePage.styled';\nimport GlobalFonts from 'fonts/fonts.styled';\nimport { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth';\nimport routesPath from 'routesPath';\nimport Typed from 'typed.js';\nimport { motion } from 'framer-motion';\nimport image from 'images';\n\nconst HomePage = () => {\n  const el = useRef(null);\n  const isLoggedIn = useSelector(authSelectors.getIsloggedIn);\n\n  useEffect(() => {\n    const typed = new Typed(el.current, {\n      strings: ['Welcome to PHONEBOOK ! '],\n      startDelay: 1000,\n      typeSpeed: 60,\n      showCursor: false,\n    });\n\n    return () => {\n      typed.destroy();\n    };\n  }, []);\n\n  return (\n    <>\n      <Container\n        style={{\n          backgroundImage: `url(${image})`,\n          backgroundSize: 'cover',\n          height: '100vh',\n        }}\n      >\n        <HomeTitle ref={el}></HomeTitle>\n        <GlobalFonts />\n        <HomeText\n          as={motion.h1}\n          initial={{ scale: 0, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          transition={{ duration: 1.9, delay: 2.5 }}\n        >\n          \"Nice moment to look at yours contactsðŸ˜€!\"\n        </HomeText>\n\n        {!isLoggedIn ? (\n          <motion.div\n            initial={{ y: -40, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ duration: 0.9, delay: 2.2 }}\n          >\n            <AuthContainer>\n              <AuthLink to=\"login\">Log in</AuthLink>\n              <AuthLink to=\"register\">Sign Up</AuthLink>\n            </AuthContainer>\n          </motion.div>\n        ) : (\n          <ContactsLink to={routesPath.contacts}>ContactsBook</ContactsLink>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["glow","keyframes","Container","styled","AuthContainer","AuthLink","NavLink","HomeTitle","HomeText","ContactsLink","createGlobalStyle","LeHavreLayersDblLine","el","useRef","isLoggedIn","useSelector","authSelectors","useEffect","typed","Typed","current","strings","startDelay","typeSpeed","showCursor","destroy","style","backgroundImage","image","backgroundSize","height","ref","as","motion","initial","scale","opacity","animate","transition","duration","delay","to","routesPath","y"],"sourceRoot":""}